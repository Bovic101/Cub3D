// typedef struct mlx
// {
//   void*          window;
//   void*          context; api, yani grafik saklar
//   int32_t        width;
//   int32_t        height;
//   double         delta_time; animasyonla alakali
// } mlx_t;
// typedef struct mlx_image
// {
//   const uint32_t width;
//   const uint32_t height;
//   uint8_t*       pixels;
//   mlx_instance_t*     instances;
//   size_t              count;
//   bool           enabled;
//   void*               context;
// } mlx_image_t;
// typedef struct mlx_texture
// {
//   uint32_t  width;
//   uint32_t  height;
//   uint8_t        bytes_per_pixel;
//   uint8_t*  pixels;
// } mlx_texture_t;
// typedef struct mlx_key_data
// {
//   keys_t         key;
//   action_t  action;
//   int32_t        os_key;
//   modifier_key_t modifier;
// } mlx_key_data_t;

// typedef enum mouse_key
// {
//   MLX_MOUSE_BUTTON_LEFT    = 0,
//   MLX_MOUSE_BUTTON_RIGHT   = 1,
//   MLX_MOUSE_BUTTON_MIDDLE  = 2,
// } mouse_key_t;

// typedef enum action
// {
//   MLX_RELEASE = 0,
//   MLX_PRESS = 1,
//   MLX_REPEAT     = 2,
// } action_t;

// typedef enum modifier_key
// {
//   MLX_SHIFT      = 0x0001,
//   MLX_CONTROL         = 0x0002,
//   MLX_ALT             = 0x0004,
//   MLX_SUPERKEY   = 0x0008,
//   MLX_CAPSLOCK   = 0x0010,
//   MLX_NUMLOCK         = 0x0020,
// } modifier_key_t;


// mlx_t            *mlx_init(int width, int height, const char *title, bool fullscreen);
// mlx_image_t      *mlx_new_image(mlx_t* mlx, uint32_t width, uint32_t height)
// bool                  mlx_loop_hook(mlx_t* mlx, void (*f)(void*), void* param);
// void                  mlx_put_pixel(mlx_image_t* image, uint32_t x, uint32_t y, uint32_t color)
// mlx_texture_t    *mlx_load_png(const char* path);
// mlx_image_t      *mlx_texture_to_image(mlx_t* mlx, mlx_texture_t* texture);
// int32_t               mlx_image_to_window(mlx_t* mlx, mlx_image_t* img, int32_t x, int32_t y)
// void                  mlx_delete_image(mlx_t* mlx, mlx_image_t* image)
// bool                  mlx_loop_hook(mlx_t* mlx, void (*f)(void*), void* param); // 0 deger
// void                  mlx_key_hook(mlx_t* mlx, mlx_keyfunc func, void* param)
// void                  mlx_cursor_hook(mlx_t* mlx, mlx_cursorfunc func, void* param)
// void                  cursor_function(double xpos, double ypos, void *param)
// void                  mlx_mouse_hook(mlx_t* mlx, mlx_mousefunc func, void* param)
// void mouse_callback(mouse_key_t button, action_t action, modifier_key_t mods, void *param)

//SIRALAMA BU
// mlx_texture_t*texture = mlx_load_png("./temp/sus.png");
// mlx_image_t* img = mlx_texture_to_image(mlx, texture);
// (mlx_image_to_window(mlx, img, 0, 0))
